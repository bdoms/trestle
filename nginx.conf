user nginx;
worker_processes 1;

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
}

http {
    # enumerate all the workers here
    upstream frontends {
        server 127.0.0.1:8000;
        server 127.0.0.1:8001;
        server 127.0.0.1:8002;
        server 127.0.0.1:8003;
    }

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    access_log /var/log/nginx/access.log;

    # this is required to get nginx running on digital ocean
    types_hash_max_size 2048;

    keepalive_timeout 65;
    proxy_read_timeout 600;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    gzip on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/css text/xml
               application/x-javascript application/xml
               application/atom+xml text/javascript;

    # Only retry if there was a communication error, not a timeout
    # on the server (to avoid propagating "queries of death"
    # to all frontends)
    proxy_next_upstream error;

    # rate limit requests - the 10m is max size of memory allowed for tracking IP addresses
    # the format is {number_of_requests}r/{unit_time} where the time is s for seconds or m for minutes
    # see https://www.nginx.com/blog/rate-limiting-nginx/
    limit_req_zone $binary_remote_addr zone=myzonekey:10m rate=1r/s;

    server {
        # block other domains from pointing at your server
        # if ($host != www.example.com) {
            # this is a special nginx code to just drop the connection and not send anything back
            # return 444;
        # }

        # server_name www.example.com;

        # allow up to burst requests without delay before enforcing the limit per ip set above
        limit_req zone=myzonekey burst=10 nodelay;

        listen 443;

        # you can create a self signed certificate to test ssl locally - afterwards enable the lines below
        # https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-in-ubuntu-18-04
        # listen 443 ssl;
        # ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
        # ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

        proxy_pass_header Server;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Scheme $scheme;

        location / {
            proxy_pass http://frontends;
        }
    }

    server {
        # redirect http to https
        # if ($host = www.example.com) {
        #     return 301 https://$host$request_uri;
        # }

        listen 80;

        # server_name www.example.com;
        return 404;
    }
}
